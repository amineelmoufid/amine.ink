i what an tool transcript every audio (mp3, wave,...) to .srt file using gemini. the audio may have more than one language in the same speech or the same sentence, may have an local dialect language (like moroccan dialect). 
the transcription should super sync, with milliseconds accurability, for more accurability. 
i want to choose how much words per caption, one word, between 2-4, between 4-8, or sentence by sentence and choose how much lines in caption, one, two, three. and choose character, with latin characters (example: i want to say to you kanbghik bzf habibi et C'est La Vérité ) or arabic characters (example: اي وانت تو ساي تو يو كنبغيك بزاف حبيبي اي سي لا فيريتي
). or both (arabic speech with arabic character, and the other language like english or french with latin character in the same time. example: i want to say to you كنبغك بزاف حبيبي  et C'est La Vérité ).

let's Build a simple web app tool using only HTML, CSS, and vanilla JavaScript (no frameworks, no React, no Tailwind, no npm installs, no bundlers, no local server — it must run by simply opening the index.html file in a browser). 
Be 100% free to run with no installs, no Node.js, and no hosting — just open index.html in any browser.
Gemini API key:  "AIzaSyAcJ2ZHlmjzuNwbkah8uy9dPvOm-DCGUeI"
Gemini API key2: "AIzaSyDcjE8ku11RVMsb-91VQCpFQ4JQTKYV1-4"
Gemini API key3: "AIzaSyD4c913NvzKh6POitWSdSVCpXXNR3hkmYcSRT"
use models/gemini-2.5-pro
don't worry about security it's an personal project, just add it in the script. i want to change between the three randomly if error.

Visual Editor:Built-in mini editor where users can play audio, see captions synced for make sure the captions is synced, and a two buttons -100ms and +100ms for adjust caption manually, and re-export. 
add translate option: after generate the final .srt version. can translate it to any language, .txt section: setion where can read and edit and copy full text transcripted without .srt format.
Instant Translate Preview:When translating .srt to another language, show both versions side-by-side (source and translated) for instant comparison before export. 
“Highlight mode” for review: While reviewing the .txt, the user can highlight uncertain segments; the system could replay just that part of the audio for quick correction.



after the first analyse, resend the audio with the srt for make sure all is good, check al. Second analysis → compares the .srt with the original audio to refine timestamps and text accuracy.

Re-listen to the original audio, Compare it against the generated .srt file, Refine both timing accuracy (start/end milliseconds) and text correctness (especially for bilingual/dialect words).



Here’s the prompt you can use when the user clicks the “Second Analysis” button:

window.secondPassPromptTemplate = `
You are an expert multilingual subtitle editor.
You will refine an existing SubRip (.srt) subtitle file using the original audio as reference.

Refinement goals:
1. **Timing Correction**:
   - Recalculate start and end timestamps for each caption with millisecond precision.
   - Ensure alignment matches exact speech onset and offset.
   - Eliminate overlaps and silent gaps.

2. **Text Accuracy**:
   - Compare each caption’s text against the audio.
   - Correct misheard or misspelled words, especially in multilingual or code-switched speech.
   - Preserve all languages and scripts as actually spoken.
   - Replace any false transliterations (e.g., "الكيسيغ" → "caissier").

3. **Formatting Consistency**:
   - Maintain .srt structure and caption numbering.
   - Keep punctuation and capitalization natural and faithful to the spoken tone.
   - Do not translate or interpret meaning.

Input:
- The original audio file.
- The current .srt transcription.

Output:
- A refined .srt file with improved text accuracy and perfectly synchronized timestamps.




“Diff Mode”

The second pass (secondPassPromptTemplate) compares the SRT with audio, refines word choices and timestamps, and outputs a clean version.
After refinement, show both versions side by side

